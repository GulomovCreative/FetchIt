{
  "fileTypes": [
    "tpl"
  ],
  "foldingStartMarker": "\\{%?",
  "foldingStopMarker": "%?\\}",
  "name": "Fenom",
  "injections": {
    "L:text.html.fenom": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#blocks"
        }
      ]
    }
  },
  "scopeName": "text.html.fenom",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#blocks"
    },
    {
      "include": "text.html.basic"
    }
  ],
  "repository": {
    "blocks": {
      "patterns": [
        {
          "begin": "(\\{%?)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.section.embedded.begin.fenom"
            }
          },
          "end": "(%?\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.section.embedded.end.fenom"
            }
          },
          "name": "source.fenom",
          "patterns": [
            {
              "include": "#strings"
            },
            {
              "include": "#variables"
            },
            {
              "include": "#lang"
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "(\\{%?)\\*",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.fenom"
            }
          },
          "end": "\\*(%?\\})",
          "name": "comment.block.fenom",
          "patterns": []
        }
      ]
    },
    "lang": {
      "patterns": [
        {
          "match": "(\\|=|\\+=|-=|\\*=|\\%=|!==|=|&=|\\^=|~|/=|\\-|\\+|/ |\\*|!=|!|<=|>=|<|>|===|==|%|&&|\\|\\|)|\\b(and|or|xor)\\b",
          "name": "keyword.operator.fenom"
        },
        {
          "match": "\\b(TRUE|FALSE|true|false)\\b",
          "name": "constant.language.fenom"
        },
        {
          "match": "\\b(var|set|add|if|else|elseif|foreach|foreachelse|autoescape|autotrim|for|extends|block|use|parent|filter|break|continue|forelse|ignore|include|insert|macro|import|raw|switch|case|unset)\\b",
          "name": "keyword.control.fenom"
        },
        {
          "captures": {
            "0": {
              "name": "variable.parameter.fenom"
            }
          },
          "match": "\\b([a-zA-Z]+)=",
          "name": "meta.attribute.fenom"
        },
        {
          "match": "\\b(plus|from|as|capture|default|cycle)\\b",
          "name": "support.function.built-in.fenom"
        },
        {
          "match": "(match|ematch|date_format|date|upper|up|lower|low|ereplace|escape|esplit|join|length|replace|strip_tags|strip|truncate|split|count|declination|catinfo|dateformat|limit|image|json_encode|json_decode|count|is_string|is_array|is_numeric|is_int|is_object|strtotime|gettype|is_double|ip2long|long2ip|strip_tags|nl2br)|(%|)(in)\\b",
          "name": "support.function.variable-modifier.fenom"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fenom"
            }
          },
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fenom"
            }
          },
          "name": "string.quoted.single.fenom",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.fenom"
            }
          ]
        },
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fenom"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fenom"
            }
          },
          "name": "string.quoted.double.fenom",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.fenom"
            }
          ]
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.fenom"
            }
          },
          "match": "\\b(\\$)Fenom\\.",
          "name": "variable.other.global.fenom"
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.fenom"
            },
            "2": {
              "name": "variable.other.fenom"
            }
          },
          "match": "(\\$)([a-zA-Z_][a-zA-Z0-9_]*)\\b|(\\$.)([a-zA-Z_.][a-zA-Z0-9_.]*)\\b",
          "name": "variable.other.fenom"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.fenom"
            },
            "2": {
              "name": "variable.other.property.fenom"
            }
          },
          "match": "(->)([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "name": "variable.other.fenom"
        },
        {
          "captures": {
            "1": {
              "name": "keyword.operator.fenom"
            },
            "2": {
              "name": "meta.function-call.object.fenom"
            },
            "3": {
              "name": "punctuation.definition.variable.fenom"
            },
            "4": {
              "name": "punctuation.definition.variable.fenom"
            }
          },
          "match": "(->)([a-zA-Z_][a-zA-Z0-9_]*)(\\().*?(\\))",
          "name": "variable.other.fenom"
        }
      ]
    }
  }
}
